# Path to the test file (Liquid template)
#
# Variables:
#
# - `manifest_dir`: Package directory
# - `contest`:      Contest ID (e.g. "abc100")
# - `problem`:      Problem index (e.g. "A", "B")
#
# Additional filters:
#
# - `kebabcase`: Convert to kebab case (by using the `heck` crate)
test-suite = {% raw %}"{{ manifest_dir }}/testcases/{{ problem | kebabcase }}.yml"{% endraw %}
#test-suite = {% raw %}"./testcases/{{ contest }}/{{ problem | kebabcase }}.yml"{% endraw %}

# Open files with the command (`jq` command)
#
# VSCode:
#open = '["bash", "-c"] + ["code -a " + .manifest_dir + " && code " + (.paths | map([.src, .test_suite]) | flatten | join(" "))]'
# Emacs:
#open = '["emacsclient", "-n"] + (.paths | map([.src, .test_suite]) | flatten)'

[new]
platform = "{{ new_platform }}"
path = {% raw %}"./{{ package_name }}"{% endraw %}

[new.template]
{% if new_template_lockfile -%}
lockfile = "{{ new_template_lockfile }}"
{%- else -%}
#lockfile = "/path/to/cargo-lock-template.toml"
{%- endif %}

[new.template.dependencies]
kind = "inline"
content = '''
{% if new_template_dependencies_content -%}
{{ new_template_dependencies_content | rstrip }}
{%- else -%}
#proconio = { version = "0.3.6", features = ["derive"] }
{%- endif %}
'''

[new.template.src]
kind = "inline"
content = '''
fn main() {
    todo!();
}
'''

#[submit.transpile]
#kind = "command"
#args = ["cargo", "equip", "--oneline", "mods", "--rustfmt", "--check", "--bin", {% raw %}"{{ bin_name }}"{% endraw %}]
#language_id = ""

{% if submit_via_binary == true -%}
  {%- assign comment = "" -%}
{%- else -%}
  {%- assign comment = "#" -%}
{%- endif -%}
{{ comment }}[submit.via-binary]
{{ comment }}target = "x86_64-unknown-linux-musl"
{{ comment }}#cross = "cross"
{{ comment }}strip = "strip"
{{ comment }}#upx = "upx"
