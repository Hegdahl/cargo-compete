---
source: tests/init.rs
expression: tree
---
{
  ".cargo": {
    "config.toml": "[build]\ntarget-dir = \"target\"\n"
  },
  "compete.toml": "# Path to the test file (Liquid template)\n#\n# Variables:\n#\n# - `manifest_dir`: Package directory\n# - `contest`:      Contest ID (e.g. \"abc100\")\n# - `problem`:      Problem index (e.g. \"A\", \"B\")\n#\n# Additional filters:\n#\n# - `kebabcase`: Convert to kebab case (by using the `heck` crate)\ntest-suite = \"{{ manifest_dir }}/testcases/{{ problem | kebabcase }}.yml\"\n#test-suite = \"./testcases/{{ contest }}/{{ problem | kebabcase }}.yml\"\n\n# Open files with the command (`jq` command that outputs `string[] | string[][]`)\n#\n# VSCode:\n#open = '[[\"code\", \"-a\", .manifest_dir], [\"code\"] + (.paths | map([.src, .test_suite]) | flatten)]'\n# Emacs:\n#open = '[\"emacsclient\", \"-n\"] + (.paths | map([.src, .test_suite]) | flatten)'\n\n[new]\n# Platform\n#\n# - atcoder\n# - codeforces\n# - yukicoder\nplatform = \"atcoder\"\n# Path (Liquid template)\n#\n# Variables:\n#\n# - `contest`:      Contest ID. **May be nil**\n# - `package_name`: Package name\npath = \"./{{ contest }}\"\n\n[new.template]\n#lockfile = \"/path/to/cargo-lock-template.toml\"\n\n[new.template.dependencies]\nkind = \"inline\"\ncontent = '''\n#proconio = { version = \"0.3.6\", features = [\"derive\"] }\n'''\n\n[new.template.src]\nkind = \"inline\"\ncontent = '''\nfn main() {\n    todo!();\n}\n'''\n\n#[submit.transpile]\n#kind = \"command\"\n#args = [\"cargo\", \"equip\", \"--oneline\", \"mods\", \"--rustfmt\", \"--check\", \"--bin\", \"{{ bin_name }}\"]\n#language_id = \"\"\n\n#[submit.via-binary]\n#target = \"x86_64-unknown-linux-musl\"\n##cross = \"cross\"\n#strip = \"strip\"\n##upx = \"upx\"\n",
  "rust-toolchain": "1.42.0"
}
